# automatically generated by the FlatBuffers compiler, do not modify

# namespace: C2S

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class C2S_TurnIntentMsg(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = C2S_TurnIntentMsg()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsC2S_TurnIntentMsg(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # C2S_TurnIntentMsg
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # C2S_TurnIntentMsg
    def ClientTimestampMs(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint64Flags, o + self._tab.Pos)
        return 0

    # C2S_TurnIntentMsg
    def TurnDeltaDegrees(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

def C2S_TurnIntentMsgStart(builder):
    builder.StartObject(2)

def Start(builder):
    C2S_TurnIntentMsgStart(builder)

def C2S_TurnIntentMsgAddClientTimestampMs(builder, clientTimestampMs):
    builder.PrependUint64Slot(0, clientTimestampMs, 0)

def AddClientTimestampMs(builder, clientTimestampMs):
    C2S_TurnIntentMsgAddClientTimestampMs(builder, clientTimestampMs)

def C2S_TurnIntentMsgAddTurnDeltaDegrees(builder, turnDeltaDegrees):
    builder.PrependFloat32Slot(1, turnDeltaDegrees, 0.0)

def AddTurnDeltaDegrees(builder, turnDeltaDegrees):
    C2S_TurnIntentMsgAddTurnDeltaDegrees(builder, turnDeltaDegrees)

def C2S_TurnIntentMsgEnd(builder):
    return builder.EndObject()

def End(builder):
    return C2S_TurnIntentMsgEnd(builder)
