# automatically generated by the FlatBuffers compiler, do not modify

# namespace: C2S

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class C2S_MovementInputMsg(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = C2S_MovementInputMsg()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsC2S_MovementInputMsg(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # C2S_MovementInputMsg
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # C2S_MovementInputMsg
    def ClientTimestampMs(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint64Flags, o + self._tab.Pos)
        return 0

    # C2S_MovementInputMsg
    def LocalDirectionIntent(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            x = o + self._tab.Pos
            from RiftForged.Networking.Shared.Vec3 import Vec3
            obj = Vec3()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # C2S_MovementInputMsg
    def IsSprinting(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

def C2S_MovementInputMsgStart(builder):
    builder.StartObject(3)

def Start(builder):
    C2S_MovementInputMsgStart(builder)

def C2S_MovementInputMsgAddClientTimestampMs(builder, clientTimestampMs):
    builder.PrependUint64Slot(0, clientTimestampMs, 0)

def AddClientTimestampMs(builder, clientTimestampMs):
    C2S_MovementInputMsgAddClientTimestampMs(builder, clientTimestampMs)

def C2S_MovementInputMsgAddLocalDirectionIntent(builder, localDirectionIntent):
    builder.PrependStructSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(localDirectionIntent), 0)

def AddLocalDirectionIntent(builder, localDirectionIntent):
    C2S_MovementInputMsgAddLocalDirectionIntent(builder, localDirectionIntent)

def C2S_MovementInputMsgAddIsSprinting(builder, isSprinting):
    builder.PrependBoolSlot(2, isSprinting, 0)

def AddIsSprinting(builder, isSprinting):
    C2S_MovementInputMsgAddIsSprinting(builder, isSprinting)

def C2S_MovementInputMsgEnd(builder):
    return builder.EndObject()

def End(builder):
    return C2S_MovementInputMsgEnd(builder)
