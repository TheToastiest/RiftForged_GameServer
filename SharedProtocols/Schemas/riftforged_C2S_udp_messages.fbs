// File: Schemas/riftforged_c2s_udp_messages.fbs
// Protocol Version: 0.0.3
// Description: Defines Client-to-Server messages for real-time UDP communication.
// This file is part of Riftforged.
// Copyright (C) 2023 Riftforged

include "riftforged_common_types.fbs"; // For Shared.Vec3, Shared.Quaternion, etc.

namespace RiftForged.Networking.UDP.C2S;

//-----------------------------------------------------------------------------
// Specific C2S Message Table Definitions
//-----------------------------------------------------------------------------

// For player movement input (WASD style)
table C2S_MovementInputMsg {
  client_timestamp_ms:ulong;
  // This is a LOCAL-SPACE direction vector relative to player's current facing.
  // e.g., (0,1,0) for forward, (-1,0,0) for left strafe (if +Y is local forward, +X is local right).
  // Server will use player's current orientation (Quaternion) to convert this to world space.
  local_direction_intent:RiftForged.Networking.Shared.Vec3 (required); 
  is_sprinting:bool;
}

// For player turning intent (Q/E style)
table C2S_TurnIntentMsg {
  client_timestamp_ms:ulong;
  // Delta angle in degrees. Negative for left (Q), positive for right (E).
  turn_delta_degrees:float; 
}

// For activating RiftStep with directional intent
enum RiftStepDirectionalIntent : byte {
  Default_Backward = 0,     // Key pressed alone, server calculates backward from current facing
  Intentional_Forward = 1,  // e.g., W + RiftStep key
  Intentional_Backward = 2, // e.g., S + RiftStep key (can be same as Default_Backward if desired)
  Intentional_Left = 3,     // e.g., A + RiftStep key (strafe left rift)
  Intentional_Right = 4     // e.g., D + RiftStep key (strafe right rift)
}

table C2S_RiftStepActivationMsg {
  client_timestamp_ms:ulong;
  directional_intent:RiftStepDirectionalIntent = Default_Backward;
}

// Add this table definition
table C2S_BasicAttackIntentMsg {
  client_timestamp_ms:ulong;
  // World-space normalized vector indicating player's current aiming direction.
  // For melee, server uses this with player orientation to define hit arc/cone.
  // For ranged, this is the initial direction of the attack/projectile.
  aim_direction:RiftForged.Networking.Shared.Vec3 (required); 
  target_entity_id:ulong = 0; // Optional: if client has a "soft" target selected. 
                              // Server still validates hit based on aim_direction & physics.
}

// Generic message for using other targeted abilities
table C2S_UseAbilityMsg {
  client_timestamp_ms:ulong;
  ability_id:uint;    // Unique ID for the ability
  target_entity_id:ulong = 0; // Optional: for single-target spells
  target_position:RiftForged.Networking.Shared.Vec3; // Optional: for ground-targeted AoEs
  // aim_direction:RiftForged.Networking.Shared.Vec3; // Optional: for client-aimed skillshots
}

// Simple ping message
table C2S_PingMsg {
  client_timestamp_ms:ulong;
}

//-----------------------------------------------------------------------------
// C2S Union and Root Message
//-----------------------------------------------------------------------------
union C2S_UDP_Payload {
  MovementInput:C2S_MovementInputMsg,
  TurnIntent:C2S_TurnIntentMsg, // Added
  RiftStepActivation:C2S_RiftStepActivationMsg, 
  BasicAttackIntent:C2S_BasicAttackIntentMsg, // << NEW
  UseAbility:C2S_UseAbilityMsg,
  Ping:C2S_PingMsg
}

table Root_C2S_UDP_Message {
  payload:C2S_UDP_Payload (required);
}
root_type Root_C2S_UDP_Message;