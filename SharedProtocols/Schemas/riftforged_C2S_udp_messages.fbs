// File: Schemas/riftforged_c2s_udp_messages.fbs
// Protocol Version: 0.0.4
// Description: Defines Client-to-Server messages for real-time UDP communication.
// This file is part of Riftforged.
// Copyright (C) 2023 Riftforged

include "riftforged_common_types.fbs"; // For Shared.Vec3, Shared.Quaternion, etc.

namespace RiftForged.Networking.UDP.C2S;

//-----------------------------------------------------------------------------
// Specific C2S Message Table Definitions
//-----------------------------------------------------------------------------

// For player movement input (WASD style)
table C2S_MovementInputMsg {
  client_timestamp_ms:ulong;
  local_direction_intent:RiftForged.Networking.Shared.Vec3 (required);
  is_sprinting:bool;
}

// For player turning intent (Q/E style)
table C2S_TurnIntentMsg {
  client_timestamp_ms:ulong;
  turn_delta_degrees:float;
}

// For activating RiftStep with directional intent
enum RiftStepDirectionalIntent : byte {
  Default_Backward = 0,
  Intentional_Forward = 1,
  Intentional_Backward = 2,
  Intentional_Left = 3,
  Intentional_Right = 4
}

table C2S_RiftStepActivationMsg {
  client_timestamp_ms:ulong;
  directional_intent:RiftStepDirectionalIntent = Default_Backward;
}

table C2S_BasicAttackIntentMsg {
  client_timestamp_ms:ulong;
  aim_direction:RiftForged.Networking.Shared.Vec3 (required);
  target_entity_id:ulong = 0;
}

// Generic message for using other targeted abilities
table C2S_UseAbilityMsg {
  client_timestamp_ms:ulong;
  ability_id:uint;
  target_entity_id:ulong = 0;
  target_position:RiftForged.Networking.Shared.Vec3;
}

// Simple ping message
table C2S_PingMsg {
  client_timestamp_ms:ulong;
}

// <<< NEWLY ADDED C2S MESSAGE FOR JOIN REQUEST >>>
table C2S_JoinRequestMsg {
  client_timestamp_ms:ulong;
  character_id_to_load:string; // The character ID the player wishes to join with
  // client_version:string;    // Optional: for version checking
  // auth_token:string;        // Optional: if you have a session token from a previous auth step
}
// <<< END NEWLY ADDED C2S MESSAGE >>>


//-----------------------------------------------------------------------------
// C2S Union and Root Message
//-----------------------------------------------------------------------------
// Add C2S_JoinRequestMsg to this union
union C2S_UDP_Payload {
  MovementInput:C2S_MovementInputMsg,
  TurnIntent:C2S_TurnIntentMsg,
  RiftStepActivation:C2S_RiftStepActivationMsg,
  BasicAttackIntent:C2S_BasicAttackIntentMsg,
  UseAbility:C2S_UseAbilityMsg,
  Ping:C2S_PingMsg,
  JoinRequest:C2S_JoinRequestMsg // <<< ADDED TO UNION
  // If you need an explicit NONE type for payloads, you could define an empty table C2S_NoneMsg {}
  // and add it here. Otherwise, an unset union (type 0) is implicitly a "none" payload.
}

table Root_C2S_UDP_Message {
  payload:C2S_UDP_Payload (required);
}

root_type Root_C2S_UDP_Message;